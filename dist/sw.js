const appFiles=["bundle.js","/","index.html","static/img/bio.jpg","static/img/engwb.jpg","static/img/geo.jpg","static/img/him.jpg","static/img/phis.jpg","static/img/bel-izl.webp"];async function cacheFirst(e){const t=await caches.match(e);return t??fetch(e)}self.addEventListener("install",function(e){e.waitUntil(runUpdater())}),self.addEventListener("fetch",e=>{const t=e.request,a=new URL(t.url),n=a.origin==location.origin,s=(n?cacheFirst:fetch)(t);e.respondWith(s)}),self.addEventListener("message",async e=>{const t=e.data.type;console.info("SW: Recieved message: "+t),"run-updater"===t&&runUpdater()});const sendMessage=async e=>{const t=await self.clients.matchAll({includeUncontrolled:!0});t?.[0]&&t[0].postMessage(e),console.info("SW: Sended message: "+e.type)},needUpdate=async()=>{const e=new Headers,t=(e.append("pragma","no-cache"),e.append("cache-control","no-cache"),await fetch("updates.json",{method:"GET",headers:e})),a=await t.json(),n=await caches.keys(),s=!n.includes(a.version);return s&&a.version},updateCache=async t=>{const e=await caches.keys();e.forEach(e=>{e!=t&&caches.delete(e)}),caches.open(t).then(e=>e.addAll(appFiles).then(()=>{console.info("SW: Updated to "+t)}))},runUpdater=async()=>{const e=await needUpdate();console.info("SW: "+(e?"Update found: "+e:"no update found")),e?(await updateCache(e),sendMessage({type:"update-complete"})):sendMessage({type:"no-update-found"})};