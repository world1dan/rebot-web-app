const appFiles=["style.css","bundle.js","/","index.html","static/lib/fontawesome/all.min.css","static/lib/fontawesome/fa-regular-400.woff2","static/icons/manifest-icon-192.png","static/lib/fontawesome/fa-solid-900.woff2","static/manifest.json","static/img/404.webp","static/img/bio.jpg","static/img/engwb.jpg","static/img/geo.jpg","static/img/him.jpg","static/img/phis.jpg","favicon.ico"];self.addEventListener("install",function(e){e.waitUntil(runUpdater())}),self.addEventListener("fetch",e=>{var a=e.request,a=(new URL(a.url).origin==location.origin?async function(e){return await caches.match(e)??fetch(e)}:fetch)(a);e.respondWith(a)}),self.addEventListener("message",async e=>{e=e.data.type;"run-updater"===e&&runUpdater()});const sendMessage=async e=>{const a=await self.clients.matchAll({includeUncontrolled:!0});a?.[0]&&a[0].postMessage(e)},runUpdater=async()=>{var e=await(async()=>{const e=new Headers;e.append("pragma","no-cache"),e.append("cache-control","no-cache");const a=await fetch("updates.json",{method:"GET",headers:e});var t=await a.json();const s=await caches.keys();return!s.includes(t.version)&&t.version})();e?(await(async a=>{const e=await caches.keys();e.forEach(e=>{e!=a&&caches.delete(e)}),caches.open(a).then(e=>e.addAll(appFiles).then(()=>{}))})(e),sendMessage({type:"update-complete"})):sendMessage({type:"no-update-found"})};